(define (domain tea)
    (:requirements :negative-preconditions :typing)
  (:types cup - object location - object kettle - object water - object teabag - object)
  (:predicates
   (hot ?w - water)
   (is-in ?o1 - object ?o2 - object)
   (at-location ?lk - location)
   (in-hand ?o - object))

  (:task brew-tea :parameters (?lk - location ?c - cup ?k - kettle ?w - water ?t - teabag))

  (:task boil-water :parameters (?k - kettle ?w - water))

  (:method m-brew-tea
    :parameters (?lk - location
                     ?c - cup
                     ?k - kettle
                     ?w - water
                     ?t - teabag)
    :task (brew-tea ?lk ?c ?k ?w ?t)
    :subtasks (and
               (get-to ?lk)
               (boil-water ?k ?w)
               (pick-up ?t)
               (put-in ?t ?c)
               (pick-up ?k)
               (pour-water ?w ?c ?k)))

  (:method m-boil-water
    :parameters (?k - kettle ?w - water)
    :task (boil-water ?k ?w)
    :subtasks (and
               (pick-up ?w)
               (put-in ?w ?k)
               (turn-on ?k ?w)))

  (:action get-to
           :parameters (?lk - location)
           :precondition (not (at-location ?lk))
           :effect (at-location ?lk))

  (:action pick-up
           :parameters (?o - object)
           :precondition (not (in-hand ?o))
           :effect (in-hand ?o))

  (:action turn-on
           :parameters (?k - kettle ?w - water)
           :precondition (is-in ?w ?k)
           :effect (hot ?w))

  (:action put-in
           :parameters (?o1 ?o2 - object)
           :precondition (and (not (is-in ?o1 ?o2))
                              (in-hand ?o1))
           :effect (and (is-in ?o1 ?o2)
                        (not (in-hand ?o1))))

  (:action pour-water
           :parameters (?w - water ?c - cup ?k - kettle)
           :precondition (and (hot ?w)
                              (in-hand ?k))
           :effect (is-in ?w ?c)))
