
CL-USER> 
;; Loading e:\Ausgelagert\projekt\git\htn2strips.lisp


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (LET ((I 0) (BRACKETS 0)))
; 
; caught STYLE-WARNING:
;   The variable I is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable BRACKETS is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (SETQ BRACKETS 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::BRACKETS

;     (SETQ I 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::I

;     (SETQ TEMPLIST 'NIL)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::TEMPLIST
; 
; compilation unit finished
;   Undefined variables:
;     BRACKETS I TEMPLIST
;   caught 3 WARNING conditions
;   caught 2 STYLE-WARNING conditions


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     ((LOOP WHILE (NOT (= ELEMENT NIL))
;            DO ((IF (EQ # #)
;                    (#))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))))
;      (SETQ ACTION (APPEND ACTION PARAMS))
;      (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;      (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;      (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION)))
; 
; caught ERROR:
;   illegal function call

;     (LET ((ACTION 'NIL)
;           (PARAMS 'NIL)
;           (PRECONDITIONS 'NIL)
;           (POSTCONDITIONS 'NIL)
;           (KEYWORDS '(:ACTION :PARAMETERS :PRECONDITION :EFFECT))
;           (CURRENT-KEYWORD 'NIL)
;           (HTN-ACTIONS-COPY HTN-ACTIONS)))
; 
; caught STYLE-WARNING:
;   The variable ACTION is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PARAMS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PRECONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable POSTCONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable KEYWORDS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable CURRENT-KEYWORD is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable HTN-ACTIONS-COPY is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     (LOOP FOR ELEMENT IN HTN-ACTIONS-COPY
;           DO ((LOOP WHILE (NOT (= ELEMENT NIL))
;                     DO ((IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)))
;               (SETQ ACTION (APPEND ACTION PARAMS))
;               (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;               (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;               (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION))))
; --> BLOCK LET SB-KERNEL:THE* 
; ==>
;   HTN-ACTIONS-COPY
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::HTN-ACTIONS-COPY
; 
; compilation unit finished
;   Undefined variable:
;     HTN-ACTIONS-COPY
;   caught 1 ERROR condition
;   caught 1 WARNING condition
;   caught 7 STYLE-WARNING conditions

;; Done loading e:\Ausgelagert\projekt\git\htn2strips.lisp
CL-USER> (read-file "input/domain.hddl" *domain*)
(read-file "input/domain.hddl" *domain*)
(DEFINE (DOMAIN TEA) (:REQUIREMENTS :NEGATIVE-PRECONDITIONS :TYPING)
 (:TYPES CUP LOCATION KETTLE WATER TEABAG - OBJECT)
 (:PREDICATES (HOT ?W - WATER) (IS-IN ?O1 - OBJECT ?O2 - OBJECT)
  (AT-LOCATION ?LK - LOCATION) (IN-HAND ?O - OBJECT))
 (:TASK BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG))
 (:TASK BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION))
 (:METHOD M-BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG) :TASK
  (BREW-TEA ?LK ?C ?K ?W ?T) :SUBTASKS
  (AND (GET-TO ?LK) (BOIL-WATER ?K ?W ?LK) (PICK-UP ?T ?LK) (PUT-IN ?T ?C)
       (POUR-WATER ?W ?C ?K)))
 (:METHOD M-BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)
  :TASK (BOIL-WATER ?K ?W ?LK) :SUBTASKS
  (AND (PICK-UP ?W ?LK) (PUT-IN ?W ?K) (TURN-ON ?K) (PICK-UP ?K ?LK)))
 (:ACTION GET-TO :PARAMETERS (?LK - LOCATION) :PRECONDITION
  (NOT (AT-LOCATION ?LK)) :EFFECT (AT-LOCATION ?LK))
 (:ACTION PICK-UP :PARAMETERS (?O - OBJECT ?LK - LOCATION) :PRECONDITION
  (AND (NOT (IN-HAND ?O)) (AT-LOCATION ?LK)) :EFFECT (IN-HAND ?O))
 (:ACTION TURN-ON :PARAMETERS (?K - KETTLE ?W - WATER) :PRECONDITION
  (IS-IN ?W ?K) :EFFECT (HOT ?W))
 (:ACTION PUT-IN :PARAMETERS (?O1 ?O2 - OBJECT) :PRECONDITION
  (AND (NOT (IS-IN ?O1 ?O2)) (IN-HAND ?O1)) :EFFECT
  (AND (IS-IN ?O1 ?O2) (NOT (IN-HAND ?O1))))
 (:ACTION POUR-WATER :PARAMETERS (?W - WATER ?C - CUP ?K - KETTLE)
  :PRECONDITION (AND (HOT ?W) (IN-HAND ?K)) :EFFECT (IS-IN ?W ?C)))

CL-USER> *domain*
*domain*
NIL

CL-USER> 
;; Loading e:\Ausgelagert\projekt\git\htn2strips.lisp


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (LET ((I 0) (BRACKETS 0)))
; 
; caught STYLE-WARNING:
;   The variable I is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable BRACKETS is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (SETQ BRACKETS 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::BRACKETS

;     (SETQ I 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::I

;     (SETQ TEMPLIST 'NIL)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::TEMPLIST
; 
; compilation unit finished
;   Undefined variables:
;     BRACKETS I TEMPLIST
;   caught 3 WARNING conditions
;   caught 2 STYLE-WARNING conditions


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     ((LOOP WHILE (NOT (= ELEMENT NIL))
;            DO ((IF (EQ # #)
;                    (#))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))))
;      (SETQ ACTION (APPEND ACTION PARAMS))
;      (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;      (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;      (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION)))
; 
; caught ERROR:
;   illegal function call

;     (LET ((ACTION 'NIL)
;           (PARAMS 'NIL)
;           (PRECONDITIONS 'NIL)
;           (POSTCONDITIONS 'NIL)
;           (KEYWORDS '(:ACTION :PARAMETERS :PRECONDITION :EFFECT))
;           (CURRENT-KEYWORD 'NIL)
;           (HTN-ACTIONS-COPY HTN-ACTIONS)))
; 
; caught STYLE-WARNING:
;   The variable ACTION is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PARAMS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PRECONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable POSTCONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable KEYWORDS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable CURRENT-KEYWORD is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable HTN-ACTIONS-COPY is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     (LOOP FOR ELEMENT IN HTN-ACTIONS-COPY
;           DO ((LOOP WHILE (NOT (= ELEMENT NIL))
;                     DO ((IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)))
;               (SETQ ACTION (APPEND ACTION PARAMS))
;               (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;               (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;               (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION))))
; --> BLOCK LET SB-KERNEL:THE* 
; ==>
;   HTN-ACTIONS-COPY
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::HTN-ACTIONS-COPY
; 
; compilation unit finished
;   Undefined variable:
;     HTN-ACTIONS-COPY
;   caught 1 ERROR condition
;   caught 1 WARNING condition
;   caught 7 STYLE-WARNING conditions

;; Done loading e:\Ausgelagert\projekt\git\htn2strips.lisp
CL-USER> (read-file "input/domain.hddl" *domain*)
(read-file "input/domain.hddl" *domain*)
(DEFINE (DOMAIN TEA) (:REQUIREMENTS :NEGATIVE-PRECONDITIONS :TYPING)
 (:TYPES CUP LOCATION KETTLE WATER TEABAG - OBJECT)
 (:PREDICATES (HOT ?W - WATER) (IS-IN ?O1 - OBJECT ?O2 - OBJECT)
  (AT-LOCATION ?LK - LOCATION) (IN-HAND ?O - OBJECT))
 (:TASK BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG))
 (:TASK BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION))
 (:METHOD M-BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG) :TASK
  (BREW-TEA ?LK ?C ?K ?W ?T) :SUBTASKS
  (AND (GET-TO ?LK) (BOIL-WATER ?K ?W ?LK) (PICK-UP ?T ?LK) (PUT-IN ?T ?C)
       (POUR-WATER ?W ?C ?K)))
 (:METHOD M-BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)
  :TASK (BOIL-WATER ?K ?W ?LK) :SUBTASKS
  (AND (PICK-UP ?W ?LK) (PUT-IN ?W ?K) (TURN-ON ?K) (PICK-UP ?K ?LK)))
 (:ACTION GET-TO :PARAMETERS (?LK - LOCATION) :PRECONDITION
  (NOT (AT-LOCATION ?LK)) :EFFECT (AT-LOCATION ?LK))
 (:ACTION PICK-UP :PARAMETERS (?O - OBJECT ?LK - LOCATION) :PRECONDITION
  (AND (NOT (IN-HAND ?O)) (AT-LOCATION ?LK)) :EFFECT (IN-HAND ?O))
 (:ACTION TURN-ON :PARAMETERS (?K - KETTLE ?W - WATER) :PRECONDITION
  (IS-IN ?W ?K) :EFFECT (HOT ?W))
 (:ACTION PUT-IN :PARAMETERS (?O1 ?O2 - OBJECT) :PRECONDITION
  (AND (NOT (IS-IN ?O1 ?O2)) (IN-HAND ?O1)) :EFFECT
  (AND (IS-IN ?O1 ?O2) (NOT (IN-HAND ?O1))))
 (:ACTION POUR-WATER :PARAMETERS (?W - WATER ?C - CUP ?K - KETTLE)
  :PRECONDITION (AND (HOT ?W) (IN-HAND ?K)) :EFFECT (IS-IN ?W ?C)))

CL-USER> *domain*
*domain*
NIL

CL-USER> 
;; Loading e:\Ausgelagert\projekt\git\htn2strips.lisp


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN READ-FILE
;     (DEFUN READ-FILE (FILENAME FLIST)
;       (SETQ *DOMAIN* 'NIL)
;       (WITH-OPEN-FILE (STREAM FILENAME) (SETQ *DOMAIN* (READ STREAM)))
;       *DOMAIN*)
; 
; caught STYLE-WARNING:
;   The variable FLIST is defined but never used.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (LET ((I 0) (BRACKETS 0)))
; 
; caught STYLE-WARNING:
;   The variable I is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable BRACKETS is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (SETQ BRACKETS 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::BRACKETS

;     (SETQ I 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::I

;     (SETQ TEMPLIST 'NIL)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::TEMPLIST
; 
; compilation unit finished
;   Undefined variables:
;     BRACKETS I TEMPLIST
;   caught 3 WARNING conditions
;   caught 2 STYLE-WARNING conditions


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     ((LOOP WHILE (NOT (= ELEMENT NIL))
;            DO ((IF (EQ # #)
;                    (#))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))))
;      (SETQ ACTION (APPEND ACTION PARAMS))
;      (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;      (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;      (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION)))
; 
; caught ERROR:
;   illegal function call

;     (LET ((ACTION 'NIL)
;           (PARAMS 'NIL)
;           (PRECONDITIONS 'NIL)
;           (POSTCONDITIONS 'NIL)
;           (KEYWORDS '(:ACTION :PARAMETERS :PRECONDITION :EFFECT))
;           (CURRENT-KEYWORD 'NIL)
;           (HTN-ACTIONS-COPY HTN-ACTIONS)))
; 
; caught STYLE-WARNING:
;   The variable ACTION is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PARAMS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PRECONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable POSTCONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable KEYWORDS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable CURRENT-KEYWORD is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable HTN-ACTIONS-COPY is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     (LOOP FOR ELEMENT IN HTN-ACTIONS-COPY
;           DO ((LOOP WHILE (NOT (= ELEMENT NIL))
;                     DO ((IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)))
;               (SETQ ACTION (APPEND ACTION PARAMS))
;               (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;               (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;               (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION))))
; --> BLOCK LET SB-KERNEL:THE* 
; ==>
;   HTN-ACTIONS-COPY
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::HTN-ACTIONS-COPY
; 
; compilation unit finished
;   Undefined variable:
;     HTN-ACTIONS-COPY
;   caught 1 ERROR condition
;   caught 1 WARNING condition
;   caught 7 STYLE-WARNING conditions

;; Done loading e:\Ausgelagert\projekt\git\htn2strips.lisp
CL-USER> 
(read-file "input/domain.hddl" *domain*)
(DEFINE (DOMAIN TEA) (:REQUIREMENTS :NEGATIVE-PRECONDITIONS :TYPING)
 (:TYPES CUP LOCATION KETTLE WATER TEABAG - OBJECT)
 (:PREDICATES (HOT ?W - WATER) (IS-IN ?O1 - OBJECT ?O2 - OBJECT)
  (AT-LOCATION ?LK - LOCATION) (IN-HAND ?O - OBJECT))
 (:TASK BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG))
 (:TASK BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION))
 (:METHOD M-BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG) :TASK
  (BREW-TEA ?LK ?C ?K ?W ?T) :SUBTASKS
  (AND (GET-TO ?LK) (BOIL-WATER ?K ?W ?LK) (PICK-UP ?T ?LK) (PUT-IN ?T ?C)
       (POUR-WATER ?W ?C ?K)))
 (:METHOD M-BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)
  :TASK (BOIL-WATER ?K ?W ?LK) :SUBTASKS
  (AND (PICK-UP ?W ?LK) (PUT-IN ?W ?K) (TURN-ON ?K) (PICK-UP ?K ?LK)))
 (:ACTION GET-TO :PARAMETERS (?LK - LOCATION) :PRECONDITION
  (NOT (AT-LOCATION ?LK)) :EFFECT (AT-LOCATION ?LK))
 (:ACTION PICK-UP :PARAMETERS (?O - OBJECT ?LK - LOCATION) :PRECONDITION
  (AND (NOT (IN-HAND ?O)) (AT-LOCATION ?LK)) :EFFECT (IN-HAND ?O))
 (:ACTION TURN-ON :PARAMETERS (?K - KETTLE ?W - WATER) :PRECONDITION
  (IS-IN ?W ?K) :EFFECT (HOT ?W))
 (:ACTION PUT-IN :PARAMETERS (?O1 ?O2 - OBJECT) :PRECONDITION
  (AND (NOT (IS-IN ?O1 ?O2)) (IN-HAND ?O1)) :EFFECT
  (AND (IS-IN ?O1 ?O2) (NOT (IN-HAND ?O1))))
 (:ACTION POUR-WATER :PARAMETERS (?W - WATER ?C - CUP ?K - KETTLE)
  :PRECONDITION (AND (HOT ?W) (IN-HAND ?K)) :EFFECT (IS-IN ?W ?C)))

CL-USER> *domain*
*domain*
(DEFINE (DOMAIN TEA) (:REQUIREMENTS :NEGATIVE-PRECONDITIONS :TYPING)
 (:TYPES CUP LOCATION KETTLE WATER TEABAG - OBJECT)
 (:PREDICATES (HOT ?W - WATER) (IS-IN ?O1 - OBJECT ?O2 - OBJECT)
  (AT-LOCATION ?LK - LOCATION) (IN-HAND ?O - OBJECT))
 (:TASK BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG))
 (:TASK BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION))
 (:METHOD M-BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG) :TASK
  (BREW-TEA ?LK ?C ?K ?W ?T) :SUBTASKS
  (AND (GET-TO ?LK) (BOIL-WATER ?K ?W ?LK) (PICK-UP ?T ?LK) (PUT-IN ?T ?C)
       (POUR-WATER ?W ?C ?K)))
 (:METHOD M-BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)
  :TASK (BOIL-WATER ?K ?W ?LK) :SUBTASKS
  (AND (PICK-UP ?W ?LK) (PUT-IN ?W ?K) (TURN-ON ?K) (PICK-UP ?K ?LK)))
 (:ACTION GET-TO :PARAMETERS (?LK - LOCATION) :PRECONDITION
  (NOT (AT-LOCATION ?LK)) :EFFECT (AT-LOCATION ?LK))
 (:ACTION PICK-UP :PARAMETERS (?O - OBJECT ?LK - LOCATION) :PRECONDITION
  (AND (NOT (IN-HAND ?O)) (AT-LOCATION ?LK)) :EFFECT (IN-HAND ?O))
 (:ACTION TURN-ON :PARAMETERS (?K - KETTLE ?W - WATER) :PRECONDITION
  (IS-IN ?W ?K) :EFFECT (HOT ?W))
 (:ACTION PUT-IN :PARAMETERS (?O1 ?O2 - OBJECT) :PRECONDITION
  (AND (NOT (IS-IN ?O1 ?O2)) (IN-HAND ?O1)) :EFFECT
  (AND (IS-IN ?O1 ?O2) (NOT (IN-HAND ?O1))))
 (:ACTION POUR-WATER :PARAMETERS (?W - WATER ?C - CUP ?K - KETTLE)
  :PRECONDITION (AND (HOT ?W) (IN-HAND ?K)) :EFFECT (IS-IN ?W ?C)))

CL-USER> (set)
;; Loading e:\Ausgelagert\projekt\git\htn2strips.lisp


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN READ-FILE
;     (SETV FLIST (READ STREAM))
; 
; caught STYLE-WARNING:
;   undefined function: COMMON-LISP-USER::SETV
; 
; compilation unit finished
;   Undefined function:
;     SETV
;   caught 1 STYLE-WARNING condition


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (LET ((I 0) (BRACKETS 0)))
; 
; caught STYLE-WARNING:
;   The variable I is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable BRACKETS is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (SETQ BRACKETS 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::BRACKETS

;     (SETQ I 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::I

;     (SETQ TEMPLIST 'NIL)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::TEMPLIST
; 
; compilation unit finished
;   Undefined variables:
;     BRACKETS I TEMPLIST
;   caught 3 WARNING conditions
;   caught 2 STYLE-WARNING conditions


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     ((LOOP WHILE (NOT (= ELEMENT NIL))
;            DO ((IF (EQ # #)
;                    (#))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))))
;      (SETQ ACTION (APPEND ACTION PARAMS))
;      (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;      (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;      (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION)))
; 
; caught ERROR:
;   illegal function call

;     (LET ((ACTION 'NIL)
;           (PARAMS 'NIL)
;           (PRECONDITIONS 'NIL)
;           (POSTCONDITIONS 'NIL)
;           (KEYWORDS '(:ACTION :PARAMETERS :PRECONDITION :EFFECT))
;           (CURRENT-KEYWORD 'NIL)
;           (HTN-ACTIONS-COPY HTN-ACTIONS)))
; 
; caught STYLE-WARNING:
;   The variable ACTION is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PARAMS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PRECONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable POSTCONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable KEYWORDS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable CURRENT-KEYWORD is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable HTN-ACTIONS-COPY is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     (LOOP FOR ELEMENT IN HTN-ACTIONS-COPY
;           DO ((LOOP WHILE (NOT (= ELEMENT NIL))
;                     DO ((IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)))
;               (SETQ ACTION (APPEND ACTION PARAMS))
;               (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;               (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;               (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION))))
; --> BLOCK LET SB-KERNEL:THE* 
; ==>
;   HTN-ACTIONS-COPY
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::HTN-ACTIONS-COPY
; 
; compilation unit finished
;   Undefined variable:
;     HTN-ACTIONS-COPY
;   caught 1 ERROR condition
;   caught 1 WARNING condition
;   caught 7 STYLE-WARNING conditions

;; Done loading e:\Ausgelagert\projekt\git\htn2strips.lisp
CL-USER> 
(read-file "input/domain.hddl" *domain*)
CL-USER> 
;; Loading e:\Ausgelagert\projekt\git\htn2strips.lisp


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (LET ((I 0) (BRACKETS 0)))
; 
; caught STYLE-WARNING:
;   The variable I is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable BRACKETS is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (SETQ BRACKETS 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::BRACKETS

;     (SETQ I 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::I

;     (SETQ TEMPLIST 'NIL)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::TEMPLIST
; 
; compilation unit finished
;   Undefined variables:
;     BRACKETS I TEMPLIST
;   caught 3 WARNING conditions
;   caught 2 STYLE-WARNING conditions


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     ((LOOP WHILE (NOT (= ELEMENT NIL))
;            DO ((IF (EQ # #)
;                    (#))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))))
;      (SETQ ACTION (APPEND ACTION PARAMS))
;      (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;      (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;      (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION)))
; 
; caught ERROR:
;   illegal function call

;     (LET ((ACTION 'NIL)
;           (PARAMS 'NIL)
;           (PRECONDITIONS 'NIL)
;           (POSTCONDITIONS 'NIL)
;           (KEYWORDS '(:ACTION :PARAMETERS :PRECONDITION :EFFECT))
;           (CURRENT-KEYWORD 'NIL)
;           (HTN-ACTIONS-COPY HTN-ACTIONS)))
; 
; caught STYLE-WARNING:
;   The variable ACTION is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PARAMS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PRECONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable POSTCONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable KEYWORDS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable CURRENT-KEYWORD is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable HTN-ACTIONS-COPY is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     (LOOP FOR ELEMENT IN HTN-ACTIONS-COPY
;           DO ((LOOP WHILE (NOT (= ELEMENT NIL))
;                     DO ((IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)))
;               (SETQ ACTION (APPEND ACTION PARAMS))
;               (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;               (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;               (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION))))
; --> BLOCK LET SB-KERNEL:THE* 
; ==>
;   HTN-ACTIONS-COPY
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::HTN-ACTIONS-COPY
; 
; compilation unit finished
;   Undefined variable:
;     HTN-ACTIONS-COPY
;   caught 1 ERROR condition
;   caught 1 WARNING condition
;   caught 7 STYLE-WARNING conditions

;; Done loading e:\Ausgelagert\projekt\git\htn2strips.lisp
CL-USER> 
(read-file "input/domain.hddl" *domain*)
(DEFINE (DOMAIN TEA) (:REQUIREMENTS :NEGATIVE-PRECONDITIONS :TYPING)
 (:TYPES CUP LOCATION KETTLE WATER TEABAG - OBJECT)
 (:PREDICATES (HOT ?W - WATER) (IS-IN ?O1 - OBJECT ?O2 - OBJECT)
  (AT-LOCATION ?LK - LOCATION) (IN-HAND ?O - OBJECT))
 (:TASK BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG))
 (:TASK BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION))
 (:METHOD M-BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG) :TASK
  (BREW-TEA ?LK ?C ?K ?W ?T) :SUBTASKS
  (AND (GET-TO ?LK) (BOIL-WATER ?K ?W ?LK) (PICK-UP ?T ?LK) (PUT-IN ?T ?C)
       (POUR-WATER ?W ?C ?K)))
 (:METHOD M-BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)
  :TASK (BOIL-WATER ?K ?W ?LK) :SUBTASKS
  (AND (PICK-UP ?W ?LK) (PUT-IN ?W ?K) (TURN-ON ?K) (PICK-UP ?K ?LK)))
 (:ACTION GET-TO :PARAMETERS (?LK - LOCATION) :PRECONDITION
  (NOT (AT-LOCATION ?LK)) :EFFECT (AT-LOCATION ?LK))
 (:ACTION PICK-UP :PARAMETERS (?O - OBJECT ?LK - LOCATION) :PRECONDITION
  (AND (NOT (IN-HAND ?O)) (AT-LOCATION ?LK)) :EFFECT (IN-HAND ?O))
 (:ACTION TURN-ON :PARAMETERS (?K - KETTLE ?W - WATER) :PRECONDITION
  (IS-IN ?W ?K) :EFFECT (HOT ?W))
 (:ACTION PUT-IN :PARAMETERS (?O1 ?O2 - OBJECT) :PRECONDITION
  (AND (NOT (IS-IN ?O1 ?O2)) (IN-HAND ?O1)) :EFFECT
  (AND (IS-IN ?O1 ?O2) (NOT (IN-HAND ?O1))))
 (:ACTION POUR-WATER :PARAMETERS (?W - WATER ?C - CUP ?K - KETTLE)
  :PRECONDITION (AND (HOT ?W) (IN-HAND ?K)) :EFFECT (IS-IN ?W ?C)))

CL-USER> *domain*
*domain*
(DEFINE (DOMAIN TEA) (:REQUIREMENTS :NEGATIVE-PRECONDITIONS :TYPING)
 (:TYPES CUP LOCATION KETTLE WATER TEABAG - OBJECT)
 (:PREDICATES (HOT ?W - WATER) (IS-IN ?O1 - OBJECT ?O2 - OBJECT)
  (AT-LOCATION ?LK - LOCATION) (IN-HAND ?O - OBJECT))
 (:TASK BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG))
 (:TASK BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION))
 (:METHOD M-BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG) :TASK
  (BREW-TEA ?LK ?C ?K ?W ?T) :SUBTASKS
  (AND (GET-TO ?LK) (BOIL-WATER ?K ?W ?LK) (PICK-UP ?T ?LK) (PUT-IN ?T ?C)
       (POUR-WATER ?W ?C ?K)))
 (:METHOD M-BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)
  :TASK (BOIL-WATER ?K ?W ?LK) :SUBTASKS
  (AND (PICK-UP ?W ?LK) (PUT-IN ?W ?K) (TURN-ON ?K) (PICK-UP ?K ?LK)))
 (:ACTION GET-TO :PARAMETERS (?LK - LOCATION) :PRECONDITION
  (NOT (AT-LOCATION ?LK)) :EFFECT (AT-LOCATION ?LK))
 (:ACTION PICK-UP :PARAMETERS (?O - OBJECT ?LK - LOCATION) :PRECONDITION
  (AND (NOT (IN-HAND ?O)) (AT-LOCATION ?LK)) :EFFECT (IN-HAND ?O))
 (:ACTION TURN-ON :PARAMETERS (?K - KETTLE ?W - WATER) :PRECONDITION
  (IS-IN ?W ?K) :EFFECT (HOT ?W))
 (:ACTION PUT-IN :PARAMETERS (?O1 ?O2 - OBJECT) :PRECONDITION
  (AND (NOT (IS-IN ?O1 ?O2)) (IN-HAND ?O1)) :EFFECT
  (AND (IS-IN ?O1 ?O2) (NOT (IN-HAND ?O1))))
 (:ACTION POUR-WATER :PARAMETERS (?W - WATER ?C - CUP ?K - KETTLE)
  :PRECONDITION (AND (HOT ?W) (IN-HAND ?K)) :EFFECT (IS-IN ?W ?C)))

CL-USER> (setq *domain* '())
(setq *domain* '())
NIL

CL-USER> 
(read-file "input/domain.hddl" *domain*)
(DEFINE (DOMAIN TEA) (:REQUIREMENTS :NEGATIVE-PRECONDITIONS :TYPING)
 (:TYPES CUP LOCATION KETTLE WATER TEABAG - OBJECT)
 (:PREDICATES (HOT ?W - WATER) (IS-IN ?O1 - OBJECT ?O2 - OBJECT)
  (AT-LOCATION ?LK - LOCATION) (IN-HAND ?O - OBJECT))
 (:TASK BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG))
 (:TASK BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION))
 (:METHOD M-BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG) :TASK
  (BREW-TEA ?LK ?C ?K ?W ?T) :SUBTASKS
  (AND (GET-TO ?LK) (BOIL-WATER ?K ?W ?LK) (PICK-UP ?T ?LK) (PUT-IN ?T ?C)
       (POUR-WATER ?W ?C ?K)))
 (:METHOD M-BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)
  :TASK (BOIL-WATER ?K ?W ?LK) :SUBTASKS
  (AND (PICK-UP ?W ?LK) (PUT-IN ?W ?K) (TURN-ON ?K) (PICK-UP ?K ?LK)))
 (:ACTION GET-TO :PARAMETERS (?LK - LOCATION) :PRECONDITION
  (NOT (AT-LOCATION ?LK)) :EFFECT (AT-LOCATION ?LK))
 (:ACTION PICK-UP :PARAMETERS (?O - OBJECT ?LK - LOCATION) :PRECONDITION
  (AND (NOT (IN-HAND ?O)) (AT-LOCATION ?LK)) :EFFECT (IN-HAND ?O))
 (:ACTION TURN-ON :PARAMETERS (?K - KETTLE ?W - WATER) :PRECONDITION
  (IS-IN ?W ?K) :EFFECT (HOT ?W))
 (:ACTION PUT-IN :PARAMETERS (?O1 ?O2 - OBJECT) :PRECONDITION
  (AND (NOT (IS-IN ?O1 ?O2)) (IN-HAND ?O1)) :EFFECT
  (AND (IS-IN ?O1 ?O2) (NOT (IN-HAND ?O1))))
 (:ACTION POUR-WATER :PARAMETERS (?W - WATER ?C - CUP ?K - KETTLE)
  :PRECONDITION (AND (HOT ?W) (IN-HAND ?K)) :EFFECT (IS-IN ?W ?C)))

CL-USER> *domain*
*domain*
NIL

CL-USER> 
;; Loading e:\Ausgelagert\projekt\git\htn2strips.lisp


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN HTN2STRIPS
;     (READ-FILE DOMAIN-FILE)
; 
; caught STYLE-WARNING:
;   The function READ-FILE is called with one argument, but wants exactly two.

;     (READ-FILE PROBLEM-FILE)
; 
; caught STYLE-WARNING:
;   The function READ-FILE is called with one argument, but wants exactly two.
; 
; compilation unit finished
;   caught 2 STYLE-WARNING conditions


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (LET ((I 0) (BRACKETS 0)))
; 
; caught STYLE-WARNING:
;   The variable I is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable BRACKETS is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (SETQ BRACKETS 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::BRACKETS

;     (SETQ I 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::I

;     (SETQ TEMPLIST 'NIL)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::TEMPLIST
; 
; compilation unit finished
;   Undefined variables:
;     BRACKETS I TEMPLIST
;   caught 3 WARNING conditions
;   caught 2 STYLE-WARNING conditions


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     ((LOOP WHILE (NOT (= ELEMENT NIL))
;            DO ((IF (EQ # #)
;                    (#))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))))
;      (SETQ ACTION (APPEND ACTION PARAMS))
;      (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;      (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;      (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION)))
; 
; caught ERROR:
;   illegal function call

;     (LET ((ACTION 'NIL)
;           (PARAMS 'NIL)
;           (PRECONDITIONS 'NIL)
;           (POSTCONDITIONS 'NIL)
;           (KEYWORDS '(:ACTION :PARAMETERS :PRECONDITION :EFFECT))
;           (CURRENT-KEYWORD 'NIL)
;           (HTN-ACTIONS-COPY HTN-ACTIONS)))
; 
; caught STYLE-WARNING:
;   The variable ACTION is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PARAMS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PRECONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable POSTCONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable KEYWORDS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable CURRENT-KEYWORD is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable HTN-ACTIONS-COPY is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     (LOOP FOR ELEMENT IN HTN-ACTIONS-COPY
;           DO ((LOOP WHILE (NOT (= ELEMENT NIL))
;                     DO ((IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)))
;               (SETQ ACTION (APPEND ACTION PARAMS))
;               (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;               (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;               (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION))))
; --> BLOCK LET SB-KERNEL:THE* 
; ==>
;   HTN-ACTIONS-COPY
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::HTN-ACTIONS-COPY
; 
; compilation unit finished
;   Undefined variable:
;     HTN-ACTIONS-COPY
;   caught 1 ERROR condition
;   caught 1 WARNING condition
;   caught 7 STYLE-WARNING conditions

;; Done loading e:\Ausgelagert\projekt\git\htn2strips.lisp
CL-USER> (htn2strips "input/domain.hddl" "input/problem.hddl")
(htn2strips "input/domain.hddl" "input/problem.hddl")
CL-USER> 
;; Loading e:\Ausgelagert\projekt\git\htn2strips.lisp


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (LET ((I 0) (BRACKETS 0)))
; 
; caught STYLE-WARNING:
;   The variable I is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable BRACKETS is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (SETQ BRACKETS 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::BRACKETS

;     (SETQ I 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::I

;     (SETQ TEMPLIST 'NIL)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::TEMPLIST
; 
; compilation unit finished
;   Undefined variables:
;     BRACKETS I TEMPLIST
;   caught 3 WARNING conditions
;   caught 2 STYLE-WARNING conditions


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     ((LOOP WHILE (NOT (= ELEMENT NIL))
;            DO ((IF (EQ # #)
;                    (#))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))))
;      (SETQ ACTION (APPEND ACTION PARAMS))
;      (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;      (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;      (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION)))
; 
; caught ERROR:
;   illegal function call

;     (LET ((ACTION 'NIL)
;           (PARAMS 'NIL)
;           (PRECONDITIONS 'NIL)
;           (POSTCONDITIONS 'NIL)
;           (KEYWORDS '(:ACTION :PARAMETERS :PRECONDITION :EFFECT))
;           (CURRENT-KEYWORD 'NIL)
;           (HTN-ACTIONS-COPY HTN-ACTIONS)))
; 
; caught STYLE-WARNING:
;   The variable ACTION is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PARAMS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PRECONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable POSTCONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable KEYWORDS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable CURRENT-KEYWORD is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable HTN-ACTIONS-COPY is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     (LOOP FOR ELEMENT IN HTN-ACTIONS-COPY
;           DO ((LOOP WHILE (NOT (= ELEMENT NIL))
;                     DO ((IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)))
;               (SETQ ACTION (APPEND ACTION PARAMS))
;               (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;               (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;               (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION))))
; --> BLOCK LET SB-KERNEL:THE* 
; ==>
;   HTN-ACTIONS-COPY
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::HTN-ACTIONS-COPY
; 
; compilation unit finished
;   Undefined variable:
;     HTN-ACTIONS-COPY
;   caught 1 ERROR condition
;   caught 1 WARNING condition
;   caught 7 STYLE-WARNING conditions

;; Done loading e:\Ausgelagert\projekt\git\htn2strips.lisp
CL-USER> 
(htn2strips "input/domain.hddl" "input/problem.hddl")
(DEFINE (PROBLEM P) (:DOMAIN TEA)
 (:OBJECTS C - CUP LK LH - LOCATION K - KETTLE W - WATER T - TEABAG)
 (:HTN :TASKS (BREW-TEA LK C K W T) :ORDERING NIL :CONSTRAINTS NIL)
 (:INIT (AT-LOCATION LH)))

CL-USER> *problem*
*problem*
(DEFINE (PROBLEM P) (:DOMAIN TEA)
 (:OBJECTS C - CUP LK LH - LOCATION K - KETTLE W - WATER T - TEABAG)
 (:HTN :TASKS (BREW-TEA LK C K W T) :ORDERING NIL :CONSTRAINTS NIL)
 (:INIT (AT-LOCATION LH)))

CL-USER> *domain*
*domain*
(DEFINE (DOMAIN TEA) (:REQUIREMENTS :NEGATIVE-PRECONDITIONS :TYPING)
 (:TYPES CUP LOCATION KETTLE WATER TEABAG - OBJECT)
 (:PREDICATES (HOT ?W - WATER) (IS-IN ?O1 - OBJECT ?O2 - OBJECT)
  (AT-LOCATION ?LK - LOCATION) (IN-HAND ?O - OBJECT))
 (:TASK BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG))
 (:TASK BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION))
 (:METHOD M-BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG) :TASK
  (BREW-TEA ?LK ?C ?K ?W ?T) :SUBTASKS
  (AND (GET-TO ?LK) (BOIL-WATER ?K ?W ?LK) (PICK-UP ?T ?LK) (PUT-IN ?T ?C)
       (POUR-WATER ?W ?C ?K)))
 (:METHOD M-BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)
  :TASK (BOIL-WATER ?K ?W ?LK) :SUBTASKS
  (AND (PICK-UP ?W ?LK) (PUT-IN ?W ?K) (TURN-ON ?K) (PICK-UP ?K ?LK)))
 (:ACTION GET-TO :PARAMETERS (?LK - LOCATION) :PRECONDITION
  (NOT (AT-LOCATION ?LK)) :EFFECT (AT-LOCATION ?LK))
 (:ACTION PICK-UP :PARAMETERS (?O - OBJECT ?LK - LOCATION) :PRECONDITION
  (AND (NOT (IN-HAND ?O)) (AT-LOCATION ?LK)) :EFFECT (IN-HAND ?O))
 (:ACTION TURN-ON :PARAMETERS (?K - KETTLE ?W - WATER) :PRECONDITION
  (IS-IN ?W ?K) :EFFECT (HOT ?W))
 (:ACTION PUT-IN :PARAMETERS (?O1 ?O2 - OBJECT) :PRECONDITION
  (AND (NOT (IS-IN ?O1 ?O2)) (IN-HAND ?O1)) :EFFECT
  (AND (IS-IN ?O1 ?O2) (NOT (IN-HAND ?O1))))
 (:ACTION POUR-WATER :PARAMETERS (?W - WATER ?C - CUP ?K - KETTLE)
  :PRECONDITION (AND (HOT ?W) (IN-HAND ?K)) :EFFECT (IS-IN ?W ?C)))

CL-USER> (find)
(find)
CL-USER> (find-if (:action) *domain*)
(find-if (:action) *domain*)
; in: FIND-IF (:ACTION)
;     (:ACTION)
; 
; caught STYLE-WARNING:
;   undefined function: :ACTION
; 
; compilation unit finished
;   Undefined function:
;     :ACTION
;   caught 1 STYLE-WARNING condition

CL-USER> 
CL-USER> 
;; Loading e:\Ausgelagert\projekt\git\htn2strips.lisp


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (LET ((I 0) (BRACKETS 0)))
; 
; caught STYLE-WARNING:
;   The variable I is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable BRACKETS is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN SPLIT
;     (SETQ BRACKETS 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::BRACKETS

;     (SETQ I 0)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::I

;     (SETQ TEMPLIST 'NIL)
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::TEMPLIST
; 
; compilation unit finished
;   Undefined variables:
;     BRACKETS I TEMPLIST
;   caught 3 WARNING conditions
;   caught 2 STYLE-WARNING conditions


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     ((LOOP WHILE (NOT (= ELEMENT NIL))
;            DO ((IF (EQ # #)
;                    (#))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))))
;      (SETQ ACTION (APPEND ACTION PARAMS))
;      (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;      (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;      (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION)))
; 
; caught ERROR:
;   illegal function call

;     (LET ((ACTION 'NIL)
;           (PARAMS 'NIL)
;           (PRECONDITIONS 'NIL)
;           (POSTCONDITIONS 'NIL)
;           (KEYWORDS '(:ACTION :PARAMETERS :PRECONDITION :EFFECT))
;           (CURRENT-KEYWORD 'NIL)
;           (HTN-ACTIONS-COPY HTN-ACTIONS)))
; 
; caught STYLE-WARNING:
;   The variable ACTION is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PARAMS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PRECONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable POSTCONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable KEYWORDS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable CURRENT-KEYWORD is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable HTN-ACTIONS-COPY is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     (LOOP FOR ELEMENT IN HTN-ACTIONS-COPY
;           DO ((LOOP WHILE (NOT (= ELEMENT NIL))
;                     DO ((IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)))
;               (SETQ ACTION (APPEND ACTION PARAMS))
;               (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;               (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;               (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION))))
; --> BLOCK LET SB-KERNEL:THE* 
; ==>
;   HTN-ACTIONS-COPY
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::HTN-ACTIONS-COPY
; 
; compilation unit finished
;   Undefined variable:
;     HTN-ACTIONS-COPY
;   caught 1 ERROR condition
;   caught 1 WARNING condition
;   caught 7 STYLE-WARNING conditions

;; Done loading e:\Ausgelagert\projekt\git\htn2strips.lisp
CL-USER> (htn2strips "input/domain.hddl" "input/problem.hddl")
(htn2strips "input/domain.hddl" "input/problem.hddl")
(DEFINE (PROBLEM P) (:DOMAIN TEA)
 (:OBJECTS C - CUP LK LH - LOCATION K - KETTLE W - WATER T - TEABAG)
 (:HTN :TASKS (BREW-TEA LK C K W T) :ORDERING NIL :CONSTRAINTS NIL)
 (:INIT (AT-LOCATION LH)))

CL-USER> *domain*
*domain*
(DEFINE (DOMAIN TEA) (:REQUIREMENTS :NEGATIVE-PRECONDITIONS :TYPING)
 (:TYPES CUP LOCATION KETTLE WATER TEABAG - OBJECT)
 (:PREDICATES (HOT ?W - WATER) (IS-IN ?O1 - OBJECT ?O2 - OBJECT)
  (AT-LOCATION ?LK - LOCATION) (IN-HAND ?O - OBJECT))
 (:TASK BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG))
 (:TASK BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION))
 (:METHOD M-BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG) :TASK
  (BREW-TEA ?LK ?C ?K ?W ?T) :SUBTASKS
  (AND (GET-TO ?LK) (BOIL-WATER ?K ?W ?LK) (PICK-UP ?T ?LK) (PUT-IN ?T ?C)
       (POUR-WATER ?W ?C ?K)))
 (:METHOD M-BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)
  :TASK (BOIL-WATER ?K ?W ?LK) :SUBTASKS
  (AND (PICK-UP ?W ?LK) (PUT-IN ?W ?K) (TURN-ON ?K) (PICK-UP ?K ?LK)))
 (:ACTION GET-TO :PARAMETERS (?LK - LOCATION) :PRECONDITION
  (NOT (AT-LOCATION ?LK)) :EFFECT (AT-LOCATION ?LK))
 (:ACTION PICK-UP :PARAMETERS (?O - OBJECT ?LK - LOCATION) :PRECONDITION
  (AND (NOT (IN-HAND ?O)) (AT-LOCATION ?LK)) :EFFECT (IN-HAND ?O))
 (:ACTION TURN-ON :PARAMETERS (?K - KETTLE ?W - WATER) :PRECONDITION
  (IS-IN ?W ?K) :EFFECT (HOT ?W))
 (:ACTION PUT-IN :PARAMETERS (?O1 ?O2 - OBJECT) :PRECONDITION
  (AND (NOT (IS-IN ?O1 ?O2)) (IN-HAND ?O1)) :EFFECT
  (AND (IS-IN ?O1 ?O2) (NOT (IN-HAND ?O1))))
 (:ACTION POUR-WATER :PARAMETERS (?W - WATER ?C - CUP ?K - KETTLE)
  :PRECONDITION (AND (HOT ?W) (IN-HAND ?K)) :EFFECT (IS-IN ?W ?C)))

CL-USER> (remove-if-not :method *domain* :key #'first)
(remove-if-not :method *domain* :key #'first)
CL-USER> (remove-if-not :ACTION *domain* :key #'first)
(remove-if-not :ACTION *domain* :key #'first)
CL-USER> 
(remove-if-not :ACTION *domain* :key #'first)
CL-USER> (remove-if-not ':method *domain* :key #'first)
(remove-if-not ':method *domain* :key #'first)
CL-USER> (remove-if-not '(:method) *domain* :key #'first)
(remove-if-not '(:method) *domain* :key #'first)
CL-USER> (:method)
(:method)
; in: :METHOD
;     (:METHOD)
; 
; caught STYLE-WARNING:
;   undefined function: :METHOD
; 
; compilation unit finished
;   Undefined function:
;     :METHOD
;   caught 1 STYLE-WARNING condition

CL-USER> (first *domain*)
(first *domain*)
DEFINE

CL-USER> 
(remove-if-not '(:method) *domain* :key #'first)
CL-USER> (remove-if-not method *domain* :key #'first)
(remove-if-not method *domain* :key #'first)
(remove-if-not method *domain* :key #'first)
CL-USER> (remove-if-not define *domain* :key #'first)
(remove-if-not define *domain* :key #'first)
CL-USER> 
(remove-if-not define *domain* :key #'first)
CL-USER> (remove-if-not 'define *domain* :key #'first)
(remove-if-not 'define *domain* :key #'first)
CL-USER> (remove-if-not 4 '(1 2 3 4 5))
(remove-if-not 4 '(1 2 3 4 5))
CL-USER> 
(remove-if-not 4 '(1 2 3 4 5))
CL-USER> 
(remove 4 '(1 2 3 4 5))
(remove 4 '(1 2 3 4 5))
(1 2 3 5)

CL-USER> (remove-if 4 '(1 2 3 4 5))
(remove-if 4 '(1 2 3 4 5))
CL-USER> (eq '(define) '(define))
(eq '(define) '(define))
NIL

CL-USER> 
(eq (first *domain*) (first *domain*))
(eq (first *domain*) (first *domain*))
T

CL-USER> 
(eq (first *domain*) 'define)
(eq (first *domain*) 'define)
T

CL-USER> 
(remove-if-not is *domain* :key #'first)
(remove-if-not is *domain* :key #'first)
CL-USER> 
(remove-if-not is-method *domain* :key #'first)
(remove-if-not is-method *domain* :key #'first)
CL-USER> 
(remove-if-not 'is-method *domain* :key #'first)
(remove-if-not 'is-method *domain* :key #'first)
CL-USER> 
(remove-if-not 'is-method *domain*)
(remove-if-not 'is-method *domain*)
NIL

CL-USER> 
(remove-if-not 'is-method *domain* :key #'first)
(remove-if-not 'is-method *domain* :key #'first)
CL-USER> 
(first *domain*)
(first *domain*)
DEFINE

CL-USER> 
(nth 1 *domain*)
(nth 1 *domain*)
(DOMAIN TEA)

CL-USER> (remove define *domain*)
(remove define *domain*)
CL-USER> 
(remove-if-not 'is-method (remove 'domain *domain*) :key #'first)
(remove-if-not 'is-method (remove 'domain *domain*) :key #'first)
CL-USER> (remove-if define *domain)
(remove-if define *domain)
CL-USER> 
(remove-if define *domain*)
(remove-if define *domain*)
CL-USER> 
(remove-if (define) *domain*)
(remove-if (define) *domain*)
; in: DEFINE
;     (DEFINE)
; 
; caught STYLE-WARNING:
;   undefined function: COMMON-LISP-USER::DEFINE
; 
; compilation unit finished
;   Undefined function:
;     DEFINE
;   caught 1 STYLE-WARNING condition

CL-USER> 
(remove-if '(define) *domain*)
(remove-if '(define) *domain*)
CL-USER> 
(remove '(define) *domain*)
(remove '(define) *domain*)
(DEFINE (DOMAIN TEA) (:REQUIREMENTS :NEGATIVE-PRECONDITIONS :TYPING)
 (:TYPES CUP LOCATION KETTLE WATER TEABAG - OBJECT)
 (:PREDICATES (HOT ?W - WATER) (IS-IN ?O1 - OBJECT ?O2 - OBJECT)
  (AT-LOCATION ?LK - LOCATION) (IN-HAND ?O - OBJECT))
 (:TASK BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG))
 (:TASK BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION))
 (:METHOD M-BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG) :TASK
  (BREW-TEA ?LK ?C ?K ?W ?T) :SUBTASKS
  (AND (GET-TO ?LK) (BOIL-WATER ?K ?W ?LK) (PICK-UP ?T ?LK) (PUT-IN ?T ?C)
       (POUR-WATER ?W ?C ?K)))
 (:METHOD M-BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)
  :TASK (BOIL-WATER ?K ?W ?LK) :SUBTASKS
  (AND (PICK-UP ?W ?LK) (PUT-IN ?W ?K) (TURN-ON ?K) (PICK-UP ?K ?LK)))
 (:ACTION GET-TO :PARAMETERS (?LK - LOCATION) :PRECONDITION
  (NOT (AT-LOCATION ?LK)) :EFFECT (AT-LOCATION ?LK))
 (:ACTION PICK-UP :PARAMETERS (?O - OBJECT ?LK - LOCATION) :PRECONDITION
  (AND (NOT (IN-HAND ?O)) (AT-LOCATION ?LK)) :EFFECT (IN-HAND ?O))
 (:ACTION TURN-ON :PARAMETERS (?K - KETTLE ?W - WATER) :PRECONDITION
  (IS-IN ?W ?K) :EFFECT (HOT ?W))
 (:ACTION PUT-IN :PARAMETERS (?O1 ?O2 - OBJECT) :PRECONDITION
  (AND (NOT (IS-IN ?O1 ?O2)) (IN-HAND ?O1)) :EFFECT
  (AND (IS-IN ?O1 ?O2) (NOT (IN-HAND ?O1))))
 (:ACTION POUR-WATER :PARAMETERS (?W - WATER ?C - CUP ?K - KETTLE)
  :PRECONDITION (AND (HOT ?W) (IN-HAND ?K)) :EFFECT (IS-IN ?W ?C)))

CL-USER> 
(remove-if-not 'is-method (cdr *domain*) :key #'first)
(remove-if-not 'is-method (cdr *domain*) :key #'first)
((:METHOD M-BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG) :TASK
  (BREW-TEA ?LK ?C ?K ?W ?T) :SUBTASKS
  (AND (GET-TO ?LK) (BOIL-WATER ?K ?W ?LK) (PICK-UP ?T ?LK) (PUT-IN ?T ?C)
       (POUR-WATER ?W ?C ?K)))
 (:METHOD M-BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)
  :TASK (BOIL-WATER ?K ?W ?LK) :SUBTASKS
  (AND (PICK-UP ?W ?LK) (PUT-IN ?W ?K) (TURN-ON ?K) (PICK-UP ?K ?LK))))

CL-USER> 
;; Loading e:\Ausgelagert\projekt\git\htn2strips.lisp


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN HTN2STRIPS
;     (GET-HTN-TASKS *DOMAIN*)
; 
; caught STYLE-WARNING:
;   The function GET-HTN-TASKS is called with one argument, but wants exactly two.
; 
; compilation unit finished
;   caught 1 STYLE-WARNING condition

WARNING: redefining COMMON-LISP-USER::IS-METHOD in DEFUN

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     ((LOOP WHILE (NOT (= ELEMENT NIL))
;            DO ((IF (EQ # #)
;                    (#))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))))
;      (SETQ ACTION (APPEND ACTION PARAMS))
;      (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;      (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;      (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION)))
; 
; caught ERROR:
;   illegal function call

;     (LET ((ACTION 'NIL)
;           (PARAMS 'NIL)
;           (PRECONDITIONS 'NIL)
;           (POSTCONDITIONS 'NIL)
;           (KEYWORDS '(:ACTION :PARAMETERS :PRECONDITION :EFFECT))
;           (CURRENT-KEYWORD 'NIL)
;           (HTN-ACTIONS-COPY HTN-ACTIONS)))
; 
; caught STYLE-WARNING:
;   The variable ACTION is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PARAMS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PRECONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable POSTCONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable KEYWORDS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable CURRENT-KEYWORD is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable HTN-ACTIONS-COPY is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     (LOOP FOR ELEMENT IN HTN-ACTIONS-COPY
;           DO ((LOOP WHILE (NOT (= ELEMENT NIL))
;                     DO ((IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)))
;               (SETQ ACTION (APPEND ACTION PARAMS))
;               (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;               (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;               (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION))))
; --> BLOCK LET SB-KERNEL:THE* 
; ==>
;   HTN-ACTIONS-COPY
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::HTN-ACTIONS-COPY
; 
; compilation unit finished
;   Undefined variable:
;     HTN-ACTIONS-COPY
;   caught 1 ERROR condition
;   caught 1 WARNING condition
;   caught 7 STYLE-WARNING conditions

;; Done loading e:\Ausgelagert\projekt\git\htn2strips.lisp
CL-USER> (get-htn-tasks *domain* (is-action))
(get-htn-tasks *domain* (is-action))
CL-USER> 
(get-htn-tasks *domain* (is-action '1))
(get-htn-tasks *domain* is-action)
CL-USER> 
(get-htn-tasks *domain* is-action)
CL-USER> (get-htn-tasks *domain* 'is-action)
(get-htn-tasks *domain* 'is-action)
((:ACTION GET-TO :PARAMETERS (?LK - LOCATION) :PRECONDITION
  (NOT (AT-LOCATION ?LK)) :EFFECT (AT-LOCATION ?LK))
 (:ACTION PICK-UP :PARAMETERS (?O - OBJECT ?LK - LOCATION) :PRECONDITION
  (AND (NOT (IN-HAND ?O)) (AT-LOCATION ?LK)) :EFFECT (IN-HAND ?O))
 (:ACTION TURN-ON :PARAMETERS (?K - KETTLE ?W - WATER) :PRECONDITION
  (IS-IN ?W ?K) :EFFECT (HOT ?W))
 (:ACTION PUT-IN :PARAMETERS (?O1 ?O2 - OBJECT) :PRECONDITION
  (AND (NOT (IS-IN ?O1 ?O2)) (IN-HAND ?O1)) :EFFECT
  (AND (IS-IN ?O1 ?O2) (NOT (IN-HAND ?O1))))
 (:ACTION POUR-WATER :PARAMETERS (?W - WATER ?C - CUP ?K - KETTLE)
  :PRECONDITION (AND (HOT ?W) (IN-HAND ?K)) :EFFECT (IS-IN ?W ?C)))

CL-USER> 
;; Loading e:\Ausgelagert\projekt\git\htn2strips.lisp


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     ((LOOP WHILE (NOT (= ELEMENT NIL))
;            DO ((IF (EQ # #)
;                    (#))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))))
;      (SETQ ACTION (APPEND ACTION PARAMS))
;      (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;      (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;      (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION)))
; 
; caught ERROR:
;   illegal function call

;     (LET ((ACTION 'NIL)
;           (PARAMS 'NIL)
;           (PRECONDITIONS 'NIL)
;           (POSTCONDITIONS 'NIL)
;           (KEYWORDS '(:ACTION :PARAMETERS :PRECONDITION :EFFECT))
;           (CURRENT-KEYWORD 'NIL)
;           (HTN-ACTIONS-COPY HTN-ACTIONS)))
; 
; caught STYLE-WARNING:
;   The variable ACTION is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PARAMS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PRECONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable POSTCONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable KEYWORDS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable CURRENT-KEYWORD is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable HTN-ACTIONS-COPY is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     (LOOP FOR ELEMENT IN HTN-ACTIONS-COPY
;           DO ((LOOP WHILE (NOT (= ELEMENT NIL))
;                     DO ((IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)))
;               (SETQ ACTION (APPEND ACTION PARAMS))
;               (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;               (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;               (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION))))
; --> BLOCK LET SB-KERNEL:THE* 
; ==>
;   HTN-ACTIONS-COPY
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::HTN-ACTIONS-COPY
; 
; compilation unit finished
;   Undefined variable:
;     HTN-ACTIONS-COPY
;   caught 1 ERROR condition
;   caught 1 WARNING condition
;   caught 7 STYLE-WARNING conditions

;; Done loading e:\Ausgelagert\projekt\git\htn2strips.lisp
CL-USER> 
(htn2strips "input/domain.hddl" "input/problem.hddl")
(htn2strips "input/domain.hddl" "input/problem.hddl")
((:TASK BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG))
 (:TASK BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)))

CL-USER> *htn-task*
*htn-task*
((:TASK BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG))
 (:TASK BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)))

CL-USER> 
;; Loading e:\Ausgelagert\projekt\git\htn2strips.lisp


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     ((LOOP WHILE (NOT (= ELEMENT NIL))
;            DO ((IF (EQ # #)
;                    (#))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))))
;      (SETQ ACTION (APPEND ACTION PARAMS))
;      (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;      (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;      (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION)))
; 
; caught ERROR:
;   illegal function call

;     (LET ((ACTION 'NIL)
;           (PARAMS 'NIL)
;           (PRECONDITIONS 'NIL)
;           (POSTCONDITIONS 'NIL)
;           (KEYWORDS '(:ACTION :PARAMETERS :PRECONDITION :EFFECT))
;           (CURRENT-KEYWORD 'NIL)
;           (HTN-ACTIONS-COPY HTN-ACTIONS)))
; 
; caught STYLE-WARNING:
;   The variable ACTION is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PARAMS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PRECONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable POSTCONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable KEYWORDS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable CURRENT-KEYWORD is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable HTN-ACTIONS-COPY is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     (LOOP FOR ELEMENT IN HTN-ACTIONS-COPY
;           DO ((LOOP WHILE (NOT (= ELEMENT NIL))
;                     DO ((IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)))
;               (SETQ ACTION (APPEND ACTION PARAMS))
;               (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;               (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;               (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION))))
; --> BLOCK LET SB-KERNEL:THE* 
; ==>
;   HTN-ACTIONS-COPY
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::HTN-ACTIONS-COPY
; 
; compilation unit finished
;   Undefined variable:
;     HTN-ACTIONS-COPY
;   caught 1 ERROR condition
;   caught 1 WARNING condition
;   caught 7 STYLE-WARNING conditions

;; Done loading e:\Ausgelagert\projekt\git\htn2strips.lisp
CL-USER> (setq *htn-task* '())
(setq *htn-task* '())
NIL

CL-USER> 
*htn-task*
*htn-task*
NIL

CL-USER> 
(htn2strips "input/domain.hddl" "input/problem.hddl")
(htn2strips "input/domain.hddl" "input/problem.hddl")
((:TASK BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG))
 (:TASK BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)))

CL-USER> 
;; Loading e:\Ausgelagert\projekt\git\htn2strips.lisp


; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     ((LOOP WHILE (NOT (= ELEMENT NIL))
;            DO ((IF (EQ # #)
;                    (#))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ # #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))
;                (IF (EQ CURRENT-KEYWORD #)
;                    (# #))))
;      (SETQ ACTION (APPEND ACTION PARAMS))
;      (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;      (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;      (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION)))
; 
; caught ERROR:
;   illegal function call

;     (LET ((ACTION 'NIL)
;           (PARAMS 'NIL)
;           (PRECONDITIONS 'NIL)
;           (POSTCONDITIONS 'NIL)
;           (KEYWORDS '(:ACTION :PARAMETERS :PRECONDITION :EFFECT))
;           (CURRENT-KEYWORD 'NIL)
;           (HTN-ACTIONS-COPY HTN-ACTIONS)))
; 
; caught STYLE-WARNING:
;   The variable ACTION is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PARAMS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable PRECONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable POSTCONDITIONS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable KEYWORDS is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable CURRENT-KEYWORD is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable HTN-ACTIONS-COPY is defined but never used.

; file: e:/Ausgelagert/projekt/git/htn2strips.lisp
; in: DEFUN TRANSLATE-ACTIONS
;     (LOOP FOR ELEMENT IN HTN-ACTIONS-COPY
;           DO ((LOOP WHILE (NOT (= ELEMENT NIL))
;                     DO ((IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)
;                         (IF #
;                             #)))
;               (SETQ ACTION (APPEND ACTION PARAMS))
;               (SETQ ACTION (APPEND ACTION PRECONDITIONS))
;               (SETQ ACTION (APPEND ACTION POSTCONDITIONS))
;               (SETQ STRIPS-ACTIONS (APPEND STRIPS-ACTIONS ACTION))))
; --> BLOCK LET SB-KERNEL:THE* 
; ==>
;   HTN-ACTIONS-COPY
; 
; caught WARNING:
;   undefined variable: COMMON-LISP-USER::HTN-ACTIONS-COPY
; 
; compilation unit finished
;   Undefined variable:
;     HTN-ACTIONS-COPY
;   caught 1 ERROR condition
;   caught 1 WARNING condition
;   caught 7 STYLE-WARNING conditions

;; Done loading e:\Ausgelagert\projekt\git\htn2strips.lisp
CL-USER> 
(htn2strips "input/domain.hddl" "input/problem.hddl")
(htn2strips "input/domain.hddl" "input/problem.hddl")
((:ACTION GET-TO :PARAMETERS (?LK - LOCATION) :PRECONDITION
  (NOT (AT-LOCATION ?LK)) :EFFECT (AT-LOCATION ?LK))
 (:ACTION PICK-UP :PARAMETERS (?O - OBJECT ?LK - LOCATION) :PRECONDITION
  (AND (NOT (IN-HAND ?O)) (AT-LOCATION ?LK)) :EFFECT (IN-HAND ?O))
 (:ACTION TURN-ON :PARAMETERS (?K - KETTLE ?W - WATER) :PRECONDITION
  (IS-IN ?W ?K) :EFFECT (HOT ?W))
 (:ACTION PUT-IN :PARAMETERS (?O1 ?O2 - OBJECT) :PRECONDITION
  (AND (NOT (IS-IN ?O1 ?O2)) (IN-HAND ?O1)) :EFFECT
  (AND (IS-IN ?O1 ?O2) (NOT (IN-HAND ?O1))))
 (:ACTION POUR-WATER :PARAMETERS (?W - WATER ?C - CUP ?K - KETTLE)
  :PRECONDITION (AND (HOT ?W) (IN-HAND ?K)) :EFFECT (IS-IN ?W ?C)))

CL-USER> *htn-task*
*htn-task*
((:TASK BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG))
 (:TASK BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)))

CL-USER> 
*htn-action*
*htn-action*
((:ACTION GET-TO :PARAMETERS (?LK - LOCATION) :PRECONDITION
  (NOT (AT-LOCATION ?LK)) :EFFECT (AT-LOCATION ?LK))
 (:ACTION PICK-UP :PARAMETERS (?O - OBJECT ?LK - LOCATION) :PRECONDITION
  (AND (NOT (IN-HAND ?O)) (AT-LOCATION ?LK)) :EFFECT (IN-HAND ?O))
 (:ACTION TURN-ON :PARAMETERS (?K - KETTLE ?W - WATER) :PRECONDITION
  (IS-IN ?W ?K) :EFFECT (HOT ?W))
 (:ACTION PUT-IN :PARAMETERS (?O1 ?O2 - OBJECT) :PRECONDITION
  (AND (NOT (IS-IN ?O1 ?O2)) (IN-HAND ?O1)) :EFFECT
  (AND (IS-IN ?O1 ?O2) (NOT (IN-HAND ?O1))))
 (:ACTION POUR-WATER :PARAMETERS (?W - WATER ?C - CUP ?K - KETTLE)
  :PRECONDITION (AND (HOT ?W) (IN-HAND ?K)) :EFFECT (IS-IN ?W ?C)))

CL-USER> 
*htn-method*
*htn-method*
((:METHOD M-BREW-TEA :PARAMETERS
  (?LK - LOCATION ?C - CUP ?K - KETTLE ?W - WATER ?T - TEABAG) :TASK
  (BREW-TEA ?LK ?C ?K ?W ?T) :SUBTASKS
  (AND (GET-TO ?LK) (BOIL-WATER ?K ?W ?LK) (PICK-UP ?T ?LK) (PUT-IN ?T ?C)
       (POUR-WATER ?W ?C ?K)))
 (:METHOD M-BOIL-WATER :PARAMETERS (?K - KETTLE ?W - WATER ?LK - LOCATION)
  :TASK (BOIL-WATER ?K ?W ?LK) :SUBTASKS
  (AND (PICK-UP ?W ?LK) (PUT-IN ?W ?K) (TURN-ON ?K) (PICK-UP ?K ?LK))))

CL-USER> 